generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int       @id @default(autoincrement())
  email    String    @unique
  password String
  role     Role
  student  Student?
  employee Employee?
}

model Student {
  id               Int      @id @default(autoincrement())
  name             String
  birthDate        DateTime
  motherName       String
  city             String
  school           String
  class            String
  raNumber         String
  enrollmentNumber String
  gender           Gender
  userId           Int      @unique
  user             User     @relation(fields: [userId], references: [id])
  classes          Class[]
}

model Employee {
  id        Int        @id @default(autoincrement())
  name      String
  userId    Int        @unique
  user      User       @relation(fields: [userId], references: [id])
  exams     Exam[]
  notices   Notice[]
  materials Material[]
}

model Exam {
  id         Int       @id @default(autoincrement())
  date       DateTime
  class      String
  subject    String
  topic      String
  employeeId Int?
  employee   Employee? @relation(fields: [employeeId], references: [id])
}

model Material {
  id          Int          @id @default(autoincrement())
  name        String
  type        MaterialType // Novo campo para especificar o tipo de material
  description String
  link        String? // Link opcional para o material
  employeeId  Int?
  employee    Employee?    @relation(fields: [employeeId], references: [id])
}

enum MaterialType {
  QUESTIONARIO
  PDF
  LISTA_EXERCICIOS
  VIDEOAULA
  OUTRO
}

model Notice {
  id         Int       @id @default(autoincrement())
  title      String
  content    String
  date       DateTime
  time       String
  employeeId Int?
  employee   Employee? @relation(fields: [employeeId], references: [id])
}

model Class {
  id        Int       @id @default(autoincrement())
  name      String
  students  Student[]
  teacher   Teacher?  @relation(fields: [teacherId], references: [id])
  teacherId Int?
}

model Teacher {
  id      Int     @id @default(autoincrement())
  name    String
  email   String  @unique
  subject String
  classes Class[]
}

enum Role {
  STUDENT
  EMPLOYEE
}

enum Gender {
  MASCULINO
  FEMININO
}

enum Condition {
  NOVO
  DANIFICADO
  USADO
}
